schema{
 query: Query
 mutation : Mutation
}

type Query { 	
	leagues: [League]
	league(leagueName: String): League
	authenticate(dto: DtoInput): String
}

type Mutation {
	addPlayer(dto: DtoInput): League,
	addWaiver(dto: DtoInput): Account,
	authenticate(dto: DtoInput): String	
	account(accountName: String): Account
	createLeague(dto: DtoInput): Account,
	createTeam(dto: DtoInput): Account,
	league: League
	leagues: [League]
	register(dto: DtoInput): String 	
	tradeTeam(dto: DtoInput): Account,	
	togglePlayer(dto: DtoInput): Account
}

type Account {
	id: ID!,
	accountName: String,
	admin: Boolean,
	master: Boolean,
	leagues: [League],
	teams: [Team]
}

type League {
	id: ID,
	count: Int,
	draft_order: Int,
	leagueName: String,
	status: String,
	accounts: [Account],
	teams: [Team]
}

type Team {
	id: ID!,
	teamName: String,
	wins: Int,
	loss: Int,
	tie: Int,
	matchup: Int,
	matchup_id: Int,
	draft_position: Int,
	helmet: String,
	league: League,
	account: Account,
	players: [Player]
}

type Player {
	id: ID!,
	playerName: String,
	position: String,
	active: Boolean,
	flex: Boolean,
	fantasy_points: Float,
	teams: [Team]
}

type Dto {
	myLeagueName: String,
	myAccountName: String,
	password: String,
	myTeamName: String,
	myTeamHelmet: String,
	otherTeamName: String,
	player1: Player,
	player2: Player
}

input AccountInput {
	accountName: String,
	admin: Boolean,
	master: Boolean,
	leagues: [LeagueInput],
	teams: [TeamInput]
}

input LeagueInput {
	leagueName: String,
	count: Int,
	draft_order: Int,
	status: String,
	accounts: [AccountInput],
	teams: [TeamInput]
}

input TeamInput {
	teamName: String,
	wins: Int,
	loss: Int,
	tie: Int,
	matchup: Int,
	matchup_id: Int,
	draft_position: Int,
	helmet: String,
	league: LeagueInput,
	account: AccountInput,
	players: [PlayerInput]
}

input PlayerInput {
	playerName: String,
	position: String,
	active: Boolean,
	flex: Boolean,
	fantasy_points: Float,
	teams: [TeamInput]
}

input DtoInput {
	myLeagueName: String,
	myAccountName: String,
	password: String,
	myTeamName: String,
	myTeamHelmet: String,
	otherTeamName: String,
	player1: PlayerInput,
	player2: PlayerInput
}